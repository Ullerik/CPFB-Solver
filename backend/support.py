import numpy as np
from numba import njit
import time
import matplotlib.pyplot as plt
import random
import json

moves = ["R","R'","R2","L","L'","L2","U","U'","U2","D","D'","D2","F","F'","F2","B","B'","B2"]
move_list = ["R","R'","R2","L","L'","L2","U","U'","U2","D","D'","D2","F","F'","F2","B","B'","B2"]

# move definitions
move_dict = {
    "R": np.array([ 0,  1, 47,  3,  4, 50,  6,  7, 53, 15, 12,  9, 16, 13, 10, 17, 14,
       11, 44, 19, 20, 41, 22, 23, 38, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37,  2, 39, 40,  5, 42, 43,  8, 45, 46, 24, 48, 49, 21,
       51, 52, 18]),
    "R2": np.array([ 0,  1, 24,  3,  4, 21,  6,  7, 18, 17, 16, 15, 14, 13, 12, 11, 10,
        9,  8, 19, 20,  5, 22, 23,  2, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 47, 39, 40, 50, 42, 43, 53, 45, 46, 38, 48, 49, 41,
       51, 52, 44]),
    "R'": np.array([ 0,  1, 38,  3,  4, 41,  6,  7, 44, 11, 14, 17, 10, 13, 16,  9, 12,
       15, 53, 19, 20, 50, 22, 23, 47, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 24, 39, 40, 21, 42, 43, 18, 45, 46,  2, 48, 49,  5,
       51, 52,  8]),
    "L": np.array([36,  1,  2, 39,  4,  5, 42,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 51, 21, 22, 48, 24, 25, 45, 33, 30, 27, 34, 31, 28, 35,
       32, 29, 26, 37, 38, 23, 40, 41, 20, 43, 44,  0, 46, 47,  3, 49, 50,
        6, 52, 53]),
    "L2": np.array([26,  1,  2, 23,  4,  5, 20,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19,  6, 21, 22,  3, 24, 25,  0, 35, 34, 33, 32, 31, 30, 29,
       28, 27, 45, 37, 38, 48, 40, 41, 51, 43, 44, 36, 46, 47, 39, 49, 50,
       42, 52, 53]),
    "L'": np.array([ 45,  1,  2, 48,  4,  5, 51,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 42, 21, 22, 39, 24, 25, 36, 29, 32, 35, 28, 31, 34, 27,
       30, 33,  0, 37, 38,  3, 40, 41,  6, 43, 44, 26, 46, 47, 23, 49, 50,
       20, 52, 53]),
    "r": np.array([ 0, 46, 47,  3, 49, 50,  6, 52, 53, 15, 12,  9, 16, 13, 10, 17, 14,
       11, 44, 43, 20, 41, 40, 23, 38, 37, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36,  1,  2, 39,  4,  5, 42,  7,  8, 45, 25, 24, 48, 22, 21,
       51, 19, 18]),
    "r2": np.array([ 0, 25, 24,  3, 22, 21,  6, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10,
        9,  8,  7, 20,  5,  4, 23,  2,  1, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 46, 47, 39, 49, 50, 42, 52, 53, 45, 37, 38, 48, 40, 41,
       51, 43, 44]),
    "r'": np.array([ 0, 37, 38,  3, 40, 41,  6, 43, 44, 11, 14, 17, 10, 13, 16,  9, 12,
       15, 53, 52, 20, 50, 49, 23, 47, 46, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 25, 24, 39, 22, 21, 42, 19, 18, 45,  1,  2, 48,  4,  5,
       51,  7,  8]),
    "l": np.array([36, 37,  2, 39, 40,  5, 42, 43,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 52, 51, 21, 49, 48, 24, 46, 45, 33, 30, 27, 34, 31, 28, 35,
       32, 29, 26, 25, 38, 23, 22, 41, 20, 19, 44,  0,  1, 47,  3,  4, 50,
        6,  7, 53]),
    "l2": np.array([26, 25,  2, 23, 22,  5, 20, 19,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18,  7,  6, 21,  4,  3, 24,  1,  0, 35, 34, 33, 32, 31, 30, 29,
       28, 27, 45, 46, 38, 48, 49, 41, 51, 52, 44, 36, 37, 47, 39, 40, 50,
       42, 43, 53]),
    "l'": np.array([45, 46,  2, 48, 49,  5, 51, 52,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 43, 42, 21, 40, 39, 24, 37, 36, 29, 32, 35, 28, 31, 34, 27,
       30, 33,  0,  1, 38,  3,  4, 41,  6,  7, 44, 26, 25, 47, 23, 22, 50,
       20, 19, 53]),
    "M": np.array([ 0, 37,  2,  3, 40,  5,  6, 43,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 52, 20, 21, 49, 23, 24, 46, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 25, 38, 39, 22, 41, 42, 19, 44, 45,  1, 47, 48,  4, 50,
       51,  7, 53]),
    "M2": np.array([ 0, 25,  2,  3, 22,  5,  6, 19,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18,  7, 20, 21,  4, 23, 24,  1, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 46, 38, 39, 49, 41, 42, 52, 44, 45, 37, 47, 48, 40, 50,
       51, 43, 53]),
    "M'": np.array([ 0, 46,  2,  3, 49,  5,  6, 52,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 43, 20, 21, 40, 23, 24, 37, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36,  1, 38, 39,  4, 41, 42,  7, 44, 45, 25, 47, 48, 22, 50,
       51, 19, 53]),

    "U": np.array([ 9, 10, 11,  3,  4,  5,  6,  7,  8, 18, 19, 20, 12, 13, 14, 15, 16,
       17, 27, 28, 29, 21, 22, 23, 24, 25, 26,  0,  1,  2, 30, 31, 32, 33,
       34, 35, 42, 39, 36, 43, 40, 37, 44, 41, 38, 45, 46, 47, 48, 49, 50,
       51, 52, 53]),
    "U2": np.array([18, 19, 20,  3,  4,  5,  6,  7,  8, 27, 28, 29, 12, 13, 14, 15, 16,
       17,  0,  1,  2, 21, 22, 23, 24, 25, 26,  9, 10, 11, 30, 31, 32, 33,
       34, 35, 44, 43, 42, 41, 40, 39, 38, 37, 36, 45, 46, 47, 48, 49, 50,
       51, 52, 53]),
    "U'": np.array([27, 28, 29,  3,  4,  5,  6,  7,  8,  0,  1,  2, 12, 13, 14, 15, 16,
       17,  9, 10, 11, 21, 22, 23, 24, 25, 26, 18, 19, 20, 30, 31, 32, 33,
       34, 35, 38, 41, 44, 37, 40, 43, 36, 39, 42, 45, 46, 47, 48, 49, 50,
       51, 52, 53]),
    "D": np.array([ 0,  1,  2,  3,  4,  5, 33, 34, 35,  9, 10, 11, 12, 13, 14,  6,  7,
        8, 18, 19, 20, 21, 22, 23, 15, 16, 17, 27, 28, 29, 30, 31, 32, 24,
       25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 48, 45, 52, 49, 46,
       53, 50, 47]),
    "D2": np.array([ 0,  1,  2,  3,  4,  5, 24, 25, 26,  9, 10, 11, 12, 13, 14, 33, 34,
       35, 18, 19, 20, 21, 22, 23,  6,  7,  8, 27, 28, 29, 30, 31, 32, 15,
       16, 17, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53, 52, 51, 50, 49, 48,
       47, 46, 45]),
    "D'": np.array([ 0,  1,  2,  3,  4,  5, 15, 16, 17,  9, 10, 11, 12, 13, 14, 24, 25,
       26, 18, 19, 20, 21, 22, 23, 33, 34, 35, 27, 28, 29, 30, 31, 32,  6,
        7,  8, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 53, 46, 49, 52,
       45, 48, 51]),
    "u": np.array([ 9, 10, 11, 12, 13, 14,  6,  7,  8, 18, 19, 20, 21, 22, 23, 15, 16,
       17, 27, 28, 29, 30, 31, 32, 24, 25, 26,  0,  1,  2,  3,  4,  5, 33,
       34, 35, 42, 39, 36, 43, 40, 37, 44, 41, 38, 45, 46, 47, 48, 49, 50,
       51, 52, 53]),
    "u2": np.array([18, 19, 20, 21, 22, 23,  6,  7,  8, 27, 28, 29, 30, 31, 32, 15, 16,
       17,  0,  1,  2,  3,  4,  5, 24, 25, 26,  9, 10, 11, 12, 13, 14, 33,
       34, 35, 44, 43, 42, 41, 40, 39, 38, 37, 36, 45, 46, 47, 48, 49, 50,
       51, 52, 53]),
    "u'": np.array([27, 28, 29, 30, 31, 32,  6,  7,  8,  0,  1,  2,  3,  4,  5, 15, 16,
       17,  9, 10, 11, 12, 13, 14, 24, 25, 26, 18, 19, 20, 21, 22, 23, 33,
       34, 35, 38, 41, 44, 37, 40, 43, 36, 39, 42, 45, 46, 47, 48, 49, 50,
       51, 52, 53]),
    "d": np.array([ 0,  1,  2, 30, 31, 32, 33, 34, 35,  9, 10, 11,  3,  4,  5,  6,  7,
        8, 18, 19, 20, 12, 13, 14, 15, 16, 17, 27, 28, 29, 21, 22, 23, 24,
       25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 48, 45, 52, 49, 46,
       53, 50, 47]),
    "d2": np.array([ 0,  1,  2, 21, 22, 23, 24, 25, 26,  9, 10, 11, 30, 31, 32, 33, 34,
       35, 18, 19, 20,  3,  4,  5,  6,  7,  8, 27, 28, 29, 12, 13, 14, 15,
       16, 17, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53, 52, 51, 50, 49, 48,
       47, 46, 45]),
    "d'": np.array([ 0,  1,  2, 12, 13, 14, 15, 16, 17,  9, 10, 11, 21, 22, 23, 24, 25,
       26, 18, 19, 20, 30, 31, 32, 33, 34, 35, 27, 28, 29,  3,  4,  5,  6,
        7,  8, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 53, 46, 49, 52,
       45, 48, 51]),
    "E": np.array([ 0,  1,  2, 30, 31, 32,  6,  7,  8,  9, 10, 11,  3,  4,  5, 15, 16,
       17, 18, 19, 20, 12, 13, 14, 24, 25, 26, 27, 28, 29, 21, 22, 23, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53]),
    "E2": np.array([ 0,  1,  2, 21, 22, 23,  6,  7,  8,  9, 10, 11, 30, 31, 32, 15, 16,
       17, 18, 19, 20,  3,  4,  5, 24, 25, 26, 27, 28, 29, 12, 13, 14, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53]),
    "E'": np.array([ 0,  1,  2, 12, 13, 14,  6,  7,  8,  9, 10, 11, 21, 22, 23, 15, 16,
       17, 18, 19, 20, 30, 31, 32, 24, 25, 26, 27, 28, 29,  3,  4,  5, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53]),


    "F": np.array([ 6,  3,  0,  7,  4,  1,  8,  5,  2, 42, 10, 11, 43, 13, 14, 44, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 45, 30, 31, 46, 33,
       34, 47, 36, 37, 38, 39, 40, 41, 35, 32, 29, 15, 12,  9, 48, 49, 50,
       51, 52, 53]),
    "F2": np.array([ 8,  7,  6,  5,  4,  3,  2,  1,  0, 35, 10, 11, 32, 13, 14, 29, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 15, 30, 31, 12, 33,
       34,  9, 36, 37, 38, 39, 40, 41, 47, 46, 45, 44, 43, 42, 48, 49, 50,
       51, 52, 53]),
    "F'": np.array([ 2,  5,  8,  1,  4,  7,  0,  3,  6, 47, 10, 11, 46, 13, 14, 45, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 44, 30, 31, 43, 33,
       34, 42, 36, 37, 38, 39, 40, 41,  9, 12, 15, 29, 32, 35, 48, 49, 50,
       51, 52, 53]),
    "B": np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 53, 12, 13, 52, 15, 16,
       51, 24, 21, 18, 25, 22, 19, 26, 23, 20, 38, 28, 29, 37, 31, 32, 36,
       34, 35, 11, 14, 17, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       27, 30, 33]),
    "B2": np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 33, 12, 13, 30, 15, 16,
       27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 28, 29, 14, 31, 32, 11,
       34, 35, 53, 52, 51, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       38, 37, 36]),
    "B'": np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 36, 12, 13, 37, 15, 16,
       38, 20, 23, 26, 19, 22, 25, 18, 21, 24, 51, 28, 29, 52, 31, 32, 53,
       34, 35, 33, 30, 27, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       17, 14, 11]),
    "f": np.array([ 6,  3,  0,  7,  4,  1,  8,  5,  2, 42, 39, 11, 43, 40, 14, 44, 41,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 48, 45, 30, 49, 46, 33,
       50, 47, 36, 37, 38, 34, 31, 28, 35, 32, 29, 15, 12,  9, 16, 13, 10,
       51, 52, 53]),
    "f2": np.array([ 8,  7,  6,  5,  4,  3,  2,  1,  0, 35, 34, 11, 32, 31, 14, 29, 28,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 16, 15, 30, 13, 12, 33,
       10,  9, 36, 37, 38, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39,
       51, 52, 53]),
    "f'": np.array([ 2,  5,  8,  1,  4,  7,  0,  3,  6, 47, 50, 11, 46, 49, 14, 45, 48,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 41, 44, 30, 40, 43, 33,
       39, 42, 36, 37, 38, 10, 13, 16,  9, 12, 15, 29, 32, 35, 28, 31, 34,
       51, 52, 53]),
    "b": np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 50, 53, 12, 49, 52, 15, 48,
       51, 24, 21, 18, 25, 22, 19, 26, 23, 20, 38, 41, 29, 37, 40, 32, 36,
       39, 35, 11, 14, 17, 10, 13, 16, 42, 43, 44, 45, 46, 47, 28, 31, 34,
       27, 30, 33]),
    "b2": np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 34, 33, 12, 31, 30, 15, 28,
       27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 29, 14, 13, 32, 11,
       10, 35, 53, 52, 51, 50, 49, 48, 42, 43, 44, 45, 46, 47, 41, 40, 39,
       38, 37, 36]),
    "b'": np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 39, 36, 12, 40, 37, 15, 41,
       38, 20, 23, 26, 19, 22, 25, 18, 21, 24, 51, 48, 29, 52, 49, 32, 53,
       50, 35, 33, 30, 27, 34, 31, 28, 42, 43, 44, 45, 46, 47, 16, 13, 10,
       17, 14, 11]),
    "S": np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 39, 11, 12, 40, 14, 15, 41,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 48, 29, 30, 49, 32, 33,
       50, 35, 36, 37, 38, 34, 31, 28, 42, 43, 44, 45, 46, 47, 16, 13, 10,
       51, 52, 53]),
    "S2": np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 34, 11, 12, 31, 14, 15, 28,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 16, 29, 30, 13, 32, 33,
       10, 35, 36, 37, 38, 50, 49, 48, 42, 43, 44, 45, 46, 47, 41, 40, 39,
       51, 52, 53]),
    "S'": np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 50, 11, 12, 49, 14, 15, 48,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 41, 29, 30, 40, 32, 33,
       39, 35, 36, 37, 38, 10, 13, 16, 42, 43, 44, 45, 46, 47, 28, 31, 34,
       51, 52, 53]),

    "x": np.array([45, 46, 47, 48, 49, 50, 51, 52, 53, 15, 12,  9, 16, 13, 10, 17, 14,
       11, 44, 43, 42, 41, 40, 39, 38, 37, 36, 29, 32, 35, 28, 31, 34, 27,
       30, 33,  0,  1,  2,  3,  4,  5,  6,  7,  8, 26, 25, 24, 23, 22, 21,
       20, 19, 18]),
    "x2": np.array([26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10,
        9,  8,  7,  6,  5,  4,  3,  2,  1,  0, 35, 34, 33, 32, 31, 30, 29,
       28, 27, 45, 46, 47, 48, 49, 50, 51, 52, 53, 36, 37, 38, 39, 40, 41,
       42, 43, 44]),
    "x'": np.array([36, 37, 38, 39, 40, 41, 42, 43, 44, 11, 14, 17, 10, 13, 16,  9, 12,
       15, 53, 52, 51, 50, 49, 48, 47, 46, 45, 33, 30, 27, 34, 31, 28, 35,
       32, 29, 26, 25, 24, 23, 22, 21, 20, 19, 18,  0,  1,  2,  3,  4,  5,
        6,  7,  8]),
    "y": np.array([ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
       26, 27, 28, 29, 30, 31, 32, 33, 34, 35,  0,  1,  2,  3,  4,  5,  6,
        7,  8, 42, 39, 36, 43, 40, 37, 44, 41, 38, 47, 50, 53, 46, 49, 52,
       45, 48, 51]),
    "y2": np.array([18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
       35,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
       16, 17, 44, 43, 42, 41, 40, 39, 38, 37, 36, 53, 52, 51, 50, 49, 48,
       47, 46, 45]),
    "y'": np.array([27, 28, 29, 30, 31, 32, 33, 34, 35,  0,  1,  2,  3,  4,  5,  6,  7,
        8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
       25, 26, 38, 41, 44, 37, 40, 43, 36, 39, 42, 51, 48, 45, 52, 49, 46,
       53, 50, 47]),
    "z": np.array([ 6,  3,  0,  7,  4,  1,  8,  5,  2, 42, 39, 36, 43, 40, 37, 44, 41,
       38, 20, 23, 26, 19, 22, 25, 18, 21, 24, 51, 48, 45, 52, 49, 46, 53,
       50, 47, 33, 30, 27, 34, 31, 28, 35, 32, 29, 15, 12,  9, 16, 13, 10,
       17, 14, 11]),
    "z2": np.array([ 8,  7,  6,  5,  4,  3,  2,  1,  0, 35, 34, 33, 32, 31, 30, 29, 28,
       27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11,
       10,  9, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39,
       38, 37, 36]),
    "z'": np.array([ 2,  5,  8,  1,  4,  7,  0,  3,  6, 47, 50, 53, 46, 49, 52, 45, 48,
       51, 24, 21, 18, 25, 22, 19, 26, 23, 20, 38, 41, 44, 37, 40, 43, 36,
       39, 42, 11, 14, 17, 10, 13, 16,  9, 12, 15, 29, 32, 35, 28, 31, 34,
       27, 30, 33]),
}
move_array = list(move_dict.values())
move_array = np.array(move_array)

def inverse_alg(alg):
    '''
    inverts alg
    '''
    if alg:
        # remove ( and ) from alg
        alg = alg.replace("(","").replace(")","")
        moves = alg.strip().split(" ")
        inverse_moves = []
        for nor in moves:
            if nor[-1] == "'":
                inverse_moves.append(nor[:-1])
            elif nor[-1] == "2":
                inverse_moves.append(nor)
            else:
                inverse_moves.append(nor+"'")
        inverse_moves.reverse()
        inverse_alg = inverse_moves[0]
        for move in inverse_moves[1:]:
            inverse_alg += f" {move}"
        return inverse_alg    
    return ''

def plot_2d_cube(state,mode=0,colors=["grey","green","r","b","darkorange","w","y","black"], no_bottom = False):
    '''
    supports cube in mode 0 or 2
    state: cube.state
    mode: if in mode 2, we swap some colors
    colors: list of colors matching [0,1,2,3,4,5,6]
    
    '''
    if mode == 2:
        for i in range(len(state)):
            if state[i]==5:
                state[i]=6
    if no_bottom:
        state = state[:-9]
        
    x_pos = [4,5,6,4,5,6,4,5,6, 8,9,10,8,9,10,8,9,10, 12,13,14,12,13,14,12,13,14, 0,1,2,0,1,2,0,1,2, 4,5,6,4,5,6,4,5,6, 4,5,6,4,5,6,4,5,6][:len(state)]
    y_pos = [6,6,6,5,5,5,4,4,4, 6,6,6,5,5,5,4,4,4, 6,6,6,5,5,5,4,4,4, 6,6,6,5,5,5,4,4,4, 10,10,10,9,9,9,8,8,8, 2,2,2,1,1,1,0,0,0][:len(state)]
    
    for i in range(len(x_pos)):
        x_pos[i] -= 3/5*(x_pos[i]//4)
        y_pos[i] -= 3/5*(y_pos[i]//4)
    
    for i, sticker in enumerate(state):
        plt.scatter(x_pos[i], y_pos[i], c = "k", marker = "s", linewidths=10)
        plt.scatter(x_pos[i], y_pos[i], c = colors[min(sticker,7)], marker = "s", linewidths=8)
    
    fig = plt.gcf()
    fig.set_size_inches(4, 3)
    if no_bottom:
        fig.set_size_inches(4.5, 3)
        plt.ylim([1,10])
        plt.xlim([-0.5,14.5])
    plt.axis('off')
    plt.show()

def cancel_alg(alg):
    while True:
        if not alg:
            return ""
        moves = alg.split(" ")
        original_alg = alg
        alg = ""
        
        for i in range(len(moves)-1):
            move = moves[i]
            next_move = moves[i+1]
            
            if move and move[0] == next_move[0]:
                rot = (2 + 2 * ("'" in move) + ("2" in move) + 2 * ("'" in next_move) + ("2" in next_move)) % 4

                if rot:
                    if rot == 1:
                        moves[i+1] = moves[i][0]
                    if rot == 2:
                        moves[i+1] = moves[i][0] + "2"
                    elif rot == 3:
                        moves[i+1] = moves[i][0] + "'"
                else:  # if cancels fully
                    moves[i+1] = ""
            elif moves[i]:
                alg += moves[i] + " "

        if moves[-1]:
            alg += moves[-1]
        
        alg = alg.strip()
        
        if alg == original_alg:
            return alg


def standardize_alg(alg):
    moves = alg.split(" ")
    
    for i in range(len(moves)-1):
        index_1 = move_list.index(moves[i])
        index_2 = move_list.index(moves[i+1])
        if index_1//6 == index_2//6 and index_1 > index_2: # first ensures same axis, second ensures U before D
            moves[i], moves[i+1] = moves[i+1], moves[i]
    
    new_alg = cancel_alg(" ".join(moves))
    # if nothing changed, we're done
    if new_alg == alg:
        return new_alg
    
    # if we cancelled moves, we might be able to shorten it further
    return standardize_alg(new_alg)


